#! /bin/bash

# Copyright (c) 2019 Giovanni Bussi

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

export COLUMNS=80

if [ "$GITHUB_ACTIONS" = true ] ; then
    echo "COLUMNS=$COLUMNS" >> "$GITHUB_ENV"
fi

# file to be source at the end of subshell:
export CONDABUILD_CI_SOURCEME="$(mktemp)"

(

# start subshell
# this allows to use the script in two ways:
# 1. as ./conda-ci
# 2. as source ./conda-ci


uname="$(uname)"
uname_m="$(uname -m)"

echo "uname: $uname"
echo "uname_m: $uname_m"

if [[ "$uname" == "Linux" ]]; then
    csys=Linux-x86_64
elif [[ "$uname" == "Darwin" ]]; then
    if [[ "$uname_m" == "x86_64" ]] ; then
      csys=MacOSX-x86_64
    elif [[ "$uname_m" == "arm64" ]] ; then
      csys=MacOSX-arm64
    else
      echo "Unsupported system Darwin $uname_m"
      exit 1
    fi
else
    echo "Unsupported system $uname"
    exit 1
fi

action=$1
shift

case "$action" in
(install)

# default location
export CONDA_PREFIX=$HOME/opt/conda

echo "conda-ci: install"

for opt
do
  case "$opt" in
  (--prefix=*)  CONDA_PREFIX="${opt#--prefix=}" ;;
  (*) echo "conda-ci: unknown option $opt"
      exit 1 ;;
  esac
done

pushd "$(mktemp -d)"

export PATH="$CONDA_PREFIX/bin:$PATH"
echo "PATH=\"$CONDA_PREFIX/bin:\$PATH\""  > "$CONDABUILD_CI_SOURCEME"

if [ "$GITHUB_ACTIONS" = true ] ; then
    echo "$CONDA_PREFIX/bin" >> "$GITHUB_PATH"
fi

curl -LO https://repo.continuum.io/miniconda/Miniconda3-latest-$csys.sh
bash Miniconda3-latest-$csys.sh -b -f -p "$CONDA_PREFIX"
rm Miniconda3-latest-$csys.sh

source activate base
echo "source activate base" >> "$CONDABUILD_CI_SOURCEME"

conda config --set always_yes yes --set changeps1 no
conda update -q conda
conda info -a

;;

(install-conda-build)

if [[ "$uname" == "Darwin" ]]; then
  if [[ "$uname_m" == "x86_64" ]] ; then
    MACOS_SDK=10.9
  elif [[ "$uname_m" == "arm64" ]] ; then
    MACOS_SDK=11.0
  fi
fi

for opt
do
  case "$opt" in
  (--sdk=*)  MACOS_SDK="${opt#--sdk=}" ;;
  (*) echo "conda-ci: unknown option $opt"
      exit 1 ;;
  esac
done

if [[ "$uname" == "Darwin" ]]; then
  echo "Downloading SDK $MACOS_SDK"
  curl -LO https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX$MACOS_SDK.sdk.tar.xz
  sudo mkdir -p /opt
  sudo tar -xf MacOSX$MACOS_SDK.sdk.tar.xz -C /opt
fi

conda config --set anaconda_upload no # not automatically at least
conda install conda-build conda-verify anaconda-client

;;
(*)
echo "error"
exit 1

esac

)

# allows setting env var if necessary:
source "$CONDABUILD_CI_SOURCEME"
